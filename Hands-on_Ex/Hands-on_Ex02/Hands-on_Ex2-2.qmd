---
title: "Hands-on Exercise 2-2"
author: "Sathvika Subramanian"
date: "Aug 23, 2025"
date-modified: "last-modified"
format: html
execute: 
 echo: true
 eval: true
 warning: false
 freeze: true
---

# 2nd Order Spatial Point Patterns Analysis Methods

# 1. Installing and Loading the R packages

```{r}
pacman::p_load(sf, spatstat, tmap, tidyverse)
```

# 2. Second-order Spatial Point Patterns Analysis

## 2.1 Analysing Spatial Point Process Using G-Function

### 2.1.1 Choa Chu Kang planning area

#### 2.1.1.1 Computing G-function estimation

```{r}
set.seed(1234)
```

```{r}
G_CK = Gest(childcare_ck_ppp, correction = "border")
plot(G_CK, xlim=c(0,500))
```

#### 2.1.1.2 Performing Complete Spatial Randomness Test

```{r}
G_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)
```

```{r}
plot(G_CK.csr)
```

### 2.1.2 Tampines planning area

#### 2.1.2.1 Computing G-function estimation

```{r}
G_tm = Gest(childcare_tm_ppp, correction = "best")
plot(G_tm)
```

#### 2.1.2.2 Performing Complete Spatial Randomness Test

```{r}
G_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = "all", nsim = 999)
```

```{r}
plot(G_tm.csr)
```

### 2.1.3 Punggol planning area

#### 2.1.3.1 Computing G-function estimation

```{r}
G_pg = Gest(childcare_pg_ppp, correction = "best")
plot(G_pg)
```

#### 2.1.3.2 Performing Complete Spatial Randomness Test

```{r}
G_pg.csr <- envelope(childcare_pg_ppp, Gest, correction = "all", nsim = 999)
```

```{r}
plot(G_pg.csr)
```


## 2.2 Analysing Spatial Point Process Using F-Function

### 2.2.1 Choa Chu Kang planning area

#### 2.2.1.1 Computing F-function estimation

```{r}
F_CK = Fest(childcare_ck_ppp)
plot(F_CK)
```

#### 2.2.1.2 Performing Complete Spatial Randomness Test

```{r}
F_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)
```

```{r}
plot(F_CK.csr)
```

### 2.2.2 Tampines planning area

#### 2.2.2.1 Computing F-function estimation

```{r}
F_tm = Fest(childcare_tm_ppp, correction = "best")
plot(F_tm)
```

#### 2.2.2.2 Performing Complete Spatial Randomness Test

```{r}
F_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = "all", nsim = 999)
```

```{r}
plot(F_tm.csr)
```

### 2.2.3 Punngol planning area

#### 2.2.3.1 Computing F-function estimation

```{r}
F_pg = Fest(childcare_pg_ppp, correction = "best")
plot(F_pg)
```

#### 2.2.3.2 Performing Complete Spatial Randomness Test

```{r}
F_pg.csr <- envelope(childcare_pg_ppp, Fest, correction = "all", nsim = 999)
```

```{r}
plot(F_pg.csr)
```

## 2.3 Analysing Spatial Point Process Using K-Function

### 2.3.1 Choa Chu Kang planning area

#### 2.3.1.1 Computing K-fucntion estimate

```{r}
K_ck = Kest(childcare_ck_ppp, correction = "Ripley")
plot(K_ck, . -r ~ r, ylab= "K(d)-r", xlab = "d(m)")
```

#### 2.3.1.2 Performing Complete Spatial Randomness Test

```{r}
K_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(K_ck.csr, . - r ~ r, xlab="d", ylab="K(d)-r")
```

### 2.3.2 Tampines planning area

#### 2.3.2.1 Computing K-fucntion estimation

```{r}
K_tm = Kest(childcare_tm_ppp, correction = "Ripley")
plot(K_tm, . -r ~ r, 
     ylab= "K(d)-r", xlab = "d(m)", 
     xlim=c(0,1000))
```

#### 2.3.2.2 Performing Complete Spatial Randomness Test

```{r}
K_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(K_tm.csr, . - r ~ r, 
     xlab="d", ylab="K(d)-r", xlim=c(0,500))
```

### 2.3.3 Punngol planning area

#### 2.3.3.1 Computing K-fucntion estimation

```{r}
K_pg = Kest(childcare_pg_ppp, correction = "Ripley")
plot(K_pg, . -r ~ r, 
     ylab= "K(d)-r", xlab = "d(m)", 
     xlim=c(0,1000))
```

#### 2.3.3.2 Performing Complete Spatial Randomness Test

```{r}
K_pg.csr <- envelope(childcare_pg_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(K_pg.csr, . - r ~ r, 
     xlab="d", ylab="K(d)-r", xlim=c(0,500))
```

## 2.4 Analysing Spatial Point Process Using L-Function

### 2.4.1 Choa Chu Kang planning area

#### 2.4.1.1 Computing L Fucntion estimation

```{r}
L_ck = Lest(childcare_ck_ppp, correction = "Ripley")
plot(L_ck, . -r ~ r, 
     ylab= "L(d)-r", xlab = "d(m)")
```

#### 2.4.1.2 Performing Complete Spatial Randomness Test

```{r}
L_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(L_ck.csr, . - r ~ r, xlab="d", ylab="L(d)-r")
```

### 2.4.2 Tampines planning area

#### 2.4.2.1 Computing L-fucntion estimate

```{r}
L_tm = Lest(childcare_tm_ppp, correction = "Ripley")
plot(L_tm, . -r ~ r, 
     ylab= "L(d)-r", xlab = "d(m)", 
     xlim=c(0,1000))
```

#### 2.4.2.2 Performing Complete Spatial Randomness Test

```{r}
L_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(L_tm.csr, . - r ~ r, 
     xlab="d", ylab="L(d)-r", xlim=c(0,500))
```

### 2.4.3 Punngol planning area

#### 2.4.3.1 Computing L-fucntion estimate

```{r}
L_pg = Lest(childcare_pg_ppp, correction = "Ripley")
plot(L_pg, . -r ~ r, 
     ylab= "L(d)-r", xlab = "d(m)", 
     xlim=c(0,1000))
```

#### 2.4.3.2 Performing Complete Spatial Randomness Test

```{r}
L_pg.csr <- envelope(childcare_pg_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(L_pg.csr, . - r ~ r, 
     xlab="d", ylab="L(d)-r", xlim=c(0,500))
```
